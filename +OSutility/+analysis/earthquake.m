classdef earthquake < OpenSees
    
properties

    gm          % ground motion metadata and time history (input accelerogram)
    g           % gravitational acceleration
    dof         % degree of freedom of acceleration
    dt          % analysis time step
    min_dt      % minimum analysis time step
    free_time   % duration of free vibration after ground motion
    tol         % convergence tolerance
    max_iter    % maximum number of interations for convergence
    zeta        % damping ratio
    mode_i      % first mode for proportional damping
    mode_j      % second mode for proportional damping
    node_damp   % list of nodes for damping assignment
    ele_damp    % list of elements for damping assignment
    out_folder

end

properties (Access = private)
    
    format = ' %0.8f';
    large_format = ' %0.15f';
    
end

    methods

        function obj = earthquake(gm, g, dof, dt, min_dt, free_time, tol, max_iter, zeta, out_folder)

            % store variables
            obj.gm = gm;
            obj.g = g;
            obj.dof = dof;
            obj.dt = dt;
            obj.min_dt = min_dt;
            obj.free_time = free_time;
            obj.tol = tol;
            obj.max_iter = max_iter;
            obj.zeta = zeta;
            obj.out_folder = out_folder;

            history_appended = vertcat(obj.gm.history*g, zeros(ceil(obj.free_time/obj.gm.dt), 1)).';
            n_total_steps = ceil(length(history_appended)*obj.gm.dt/obj.dt);

            obj.cmdLine = [obj.cmdLine '\n' ...
                           'set pi [expr atan(1.0)*4.0];\n' ...
                           'set file_name "' obj.out_folder 'period.out";\n' ...
                           'set file_ID [open $file_name "w"];\n' ...
                           'set ts_tag 2;\n' ...
                           'timeSeries Path $ts_tag -dt ' num2str(obj.gm.dt, obj.format) ' -values {' num2str(history_appended, obj.format) '} -prependZero;\n' ...
                           'pattern UniformExcitation 2 ' num2str(obj.dof) ' -accel $ts_tag\n' ...
                           'constraints Plain;\n' ...
                           'numberer RCM;\n' ...
                           'system Umfpack;\n' ...
                           'set conv_tol ' num2str(obj.tol, obj.large_format) ';\n' ...
                           'set max_iter ' num2str(obj.max_iter, '%g') ';\n' ...
                           'test EnergyIncr $conv_tol $max_iter;\n' ...
                           'algorithm Newton;\n' ...
                           'integrator Newmark 0.5 0.25;\n' ...
                           'analysis Transient;\n' ...
                           'set dt ' num2str(obj.dt, obj.format) ';\n' ...
                           'set min_dt ' num2str(obj.min_dt, obj.large_format) ';\n' ...
                           'set n_steps ' num2str(n_total_steps) ';\n' ...
                           'set cur_step 1;\n' ...
                           'set div 10.0;\n' ...
                           'set tol 1.0e-8;\n' ...
                           'set eigenvalue [eigen 3];\n' ...
                           'modalDamping 0.02;\n' ...
                           'while {$cur_step < $n_steps} {\n' ...
                           '\t'     'test EnergyIncr $conv_tol $max_iter;\n' ...
                           '\t'     'algorithm Newton;\n' ...
                           '\t'     'set ok [analyze 1 $dt];\n' ...
                           '\t'     'if {$ok != 0} {\n' ...
                           '\t\t'       'set dt_temp [expr $dt];\n' ...
                           '\t\t'       'puts "\n\t> analysis failed to converge at step $cur_step";\n' ...
                           '\t\t'       'puts "\t\t> trying KrylovNewton";\n' ...
                           '\t\t'       'algorithm KrylovNewton -maxDim 6;\n' ...
                           '\t\t'       'set ok [analyze 1 $dt];\n' ...
                           '\t\t'       'if {$ok != 0} {\n' ...
                           '\t\t\t'         'set t 0.0;\n' ...
                           '\t\t\t'         'set mini_t 0.0;\n' ...
                           '\t\t\t'         'set dt_temp [expr round($dt/$div/$tol)*$tol];\n' ...
                           '\t\t\t'         'set mini_dt_temp 0.0;\n' ...
                           '\t\t\t'         'while {$t < $dt} {\n' ...
                           '\t\t\t\t'           'if {$dt_temp < $min_dt} {\n' ...
                           '\t\t\t\t\t'             'puts "\n<< model did not converge (reason: time step less than $min_dt)";\n' ...
                           '\t\t\t\t\t'             'puts "<< exiting safely\n";\n' ...
                           '\t\t\t\t\t'             'wipe;\n' ...
                           '\t\t\t\t\t'             'exit;\n' ...
                           '\t\t\t\t'           '};\n' ...
                           '\t\t\t\t'           'set ok [analyze 1 $dt_temp];\n' ...
                           '\t\t\t\t'           'if {$ok == 0} {\n' ...
                           '\t\t\t\t\t'             'set t [expr round(($t + $dt_temp)/$tol)*$tol];\n' ...
                           '\t\t\t\t\t'             'set mini_t [expr round(($mini_t + $dt_temp)/$tol)*$tol];\n' ...
                           '\t\t\t\t\t'             'if {$mini_t >= $mini_dt_temp} {set dt_temp [expr round($dt_temp*$div/$tol)*$tol]};\n' ...
                           '\t\t\t\t'           '} else {\n' ...
                           '\t\t\t\t\t'             'set mini_t 0.0;\n' ...
                           '\t\t\t\t\t'             'set mini_dt_temp [expr round($dt_temp/$tol)*$tol];\n' ...
                           '\t\t\t\t\t'             'set dt_temp [expr round($dt_temp/$div/$tol)*$tol];\n' ...
                           '\t\t\t\t'           '};\n' ...
                           '\t\t\t'         '};\n' ...
                           '\t\t'       '};\n' ...
                           '\t'     '};\n' ...
                           '\t'     'if {$cur_step %% 100 == 0} {\n' ...
                           '\t\t'       'puts "\n> step $cur_step complete";\n' ...
                           '\t'     '};\n' ...
                           '\t'     'incr cur_step;\n' ...
                           '}'];

        end

    end

end