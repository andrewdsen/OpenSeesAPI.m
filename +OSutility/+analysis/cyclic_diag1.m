classdef cyclic_diag1 < OpenSees
   
    properties
        
        format = ' %0.9f';
        
        ctrlNodeAnalysis % actual contorl node used in integrator
        ctrldofAnalysis  % actual dof used in integrator
        ctrlNode    % control node pair for diagonal
        ctrldof     % control dof pair for diagonal
        targetDisp  % array of displacement targets
        targetIncr  % target displacement increment (absolute)
        tol         % convergence tolerance
        maxIter     % maximum number of iterations for convergence
                
    end
    
    methods
        
        function obj = cyclic_diag1(ctrlNodeAnalysis, ctrldofAnalysis, ctrlNode,ctrldof,targetDisp,targetIncr,tol,maxIter)
           
            % store variables
            obj.ctrlNodeAnalysis = ctrlNodeAnalysis;
            obj.ctrldofAnalysis = ctrldofAnalysis;
            obj.ctrlNode = ctrlNode;
            obj.ctrldof = ctrldof;
            obj.targetDisp = targetDisp;
            obj.targetIncr = targetIncr;
            obj.tol = tol;
            obj.maxIter = maxIter;
                       
            % analysis convergence loop
            obj.cmdLine = [obj.cmdLine '\n' ...
                           'set ctrl_node_analysis ' num2str(obj.ctrlNodeAnalysis.tag) ';\n' ...
                           'set ctrl_dof_analysis ' num2str(obj.ctrldofAnalysis) ';\n' ...
                           'set ctrl_node_i ' num2str(obj.ctrlNode(1).tag) ';\n' ...
                           'set ctrl_node_j ' num2str(obj.ctrlNode(2).tag) ';\n' ...
                           'set ctrl_dof_1 ' num2str(obj.ctrldof(1)) ';\n' ...
                           'set ctrl_dof_2 ' num2str(obj.ctrldof(2)) ';\n' ...
                           'set ctrl_dof_index_1 [expr $ctrl_dof_1 - 1];\n' ...
                           'set ctrl_dof_index_2 [expr $ctrl_dof_2 - 1];\n' ...
                           'set init_node_i [nodeCoord $ctrl_node_i];\n' ...
                           'set init_node_j [nodeCoord $ctrl_node_j];\n' ...
                           'set orig_dist_1 [expr [lindex $init_node_j 0] - [lindex $init_node_i 0]];\n' ...
                           'set orig_dist_2 [expr [lindex $init_node_j 1] - [lindex $init_node_i 1]];\n' ...
                           '# puts "orig dist 1: $orig_dist_1";\n' ...
                           '# puts "orig dist 2: $orig_dist_2";\n' ...
                           'set init_disp_node_i [nodeDisp $ctrl_node_i];\n' ...
                           'set init_disp_node_j [nodeDisp $ctrl_node_j];\n' ...
                           'set init_node_i_0 [expr [lindex $init_node_i 0] + [lindex $init_disp_node_i 0]];\n' ...
                           'set init_node_i_1 [expr [lindex $init_node_i 1] + [lindex $init_disp_node_i 1]];\n' ...
                           'set init_node_i_2 [expr [lindex $init_node_i 2] + [lindex $init_disp_node_i 2]];\n' ...
                           'set init_node_j_0 [expr [lindex $init_node_j 0] + [lindex $init_disp_node_j 0]];\n' ...
                           'set init_node_j_1 [expr [lindex $init_node_j 1] + [lindex $init_disp_node_j 1]];\n' ...
                           'set init_node_j_2 [expr [lindex $init_node_j 2] + [lindex $init_disp_node_j 2]];\n' ...
                           'lset init_node_i 0 $init_node_i_0;\n' ...
                           'lset init_node_i 1 $init_node_i_1;\n' ...
                           'lset init_node_i 2 $init_node_i_2;\n' ...
                           'lset init_node_j 0 $init_node_j_0;\n' ...
                           'lset init_node_j 1 $init_node_j_1;\n' ...
                           'lset init_node_j 2 $init_node_j_2;\n' ...
                           'set init_dist_1 [expr [lindex $init_node_j 0] - [lindex $init_node_i 0]];\n' ...
                           'set init_dist_2 [expr [lindex $init_node_j 1] - [lindex $init_node_i 1]];\n' ...
                           'set init_length [expr hypot($init_dist_1, $init_dist_2)];\n' ...
                           'set targ_incr ' num2str(obj.targetIncr, obj.format) ';\n' ...
                           'set targ_tol ' num2str(obj.tol, obj.format) ';\n' ...
                           'set max_iter ' num2str(obj.maxIter) ';\n' ...
                           'foreach targ_disp { ' num2str(obj.targetDisp) ' } {\n' ...
                           '   constraints Transformation;\n' ...
                           '   numberer RCM;\n' ...
                           '   system Mumps -ICNTL 100;\n' ...
                           '   set disp_node_i [nodeDisp $ctrl_node_i];\n' ...
                           '   set disp_node_j [nodeDisp $ctrl_node_j];\n' ...
                           '   # puts "disp_node_i: $disp_node_i";\n' ...
                           '   # puts "disp_node_j: $disp_node_j";\n' ...
                           '   set ctrl_disp [expr hypot($orig_dist_1 - [lindex $disp_node_i $ctrl_dof_index_1] + [lindex $disp_node_j $ctrl_dof_index_1], $orig_dist_2 - [lindex $disp_node_i $ctrl_dof_index_2] + [lindex $disp_node_j $ctrl_dof_index_2]) - $init_length];\n' ...
                           '   # puts "ctrl disp: $ctrl_disp";\n' ...
                           '   set travel 0.0;\n' ...
                           '   set rel_disp [expr $targ_disp - $ctrl_disp];\n' ...
                           '   # puts "rel disp: $rel_disp";\n' ...
                           '   if {$rel_disp > 0} {\n' ...
                           '      set sgn 1.0;\n' ...
                           '   } else {\n' ...
                           '      set sgn -1.0;\n' ...
                           '   };\n' ...
                           '   set incr [expr $sgn*$targ_incr];\n' ...
                           '   puts "\ndiagonal excursion: $targ_disp | lateral increment: $incr\n";\n' ...
                           '   while {[expr abs($travel)] < [expr abs($rel_disp)]} {\n' ...
                           '      test NormDispIncr $targ_tol $max_iter;\n' ...
                           '      algorithm Newton;\n' ...
                           '      integrator DisplacementControl $ctrl_node_analysis $ctrl_dof_analysis $incr;\n' ...
                           '      analysis Static;\n' ...
                           '      set ok [analyze 1];\n' ...
                           '      if {$ok != 0} {\n' ...
                           '         set print_disp [expr int($travel*100.0)/100.0];\n' ...
                           '         puts "\t> at $print_disp";\n' ...
                           '         set temp_incr $incr;\n' ...
                           '         set denom 2.0;\n' ...
                           '         set counter 0;\n' ...
                           '         set temp_tol $targ_tol;\n' ...
                           '         while {$ok != 0} {\n' ...
                           '            incr counter;\n' ...
                           '            if {$counter == 1} {\n' ...
                           '               algorithm KrylovNewton -maxDim 6;\n' ...
                           '            } elseif {$counter == 8} {\n' ...
                           '               test NormDispIncr [expr $targ_tol*10.0] $max_iter;\n' ...
                           '            } elseif {$counter == 16} {\n' ...
                           '               exit;\n' ...
                           '            };\n' ...
                           '            set temp_incr [expr $temp_incr/$denom];\n' ...
                           '            set puts "\t\t> trying lateral increment: $temp_incr";\n' ...
                           '            integrator DisplacementControl $ctrl_node_analysis $ctrl_dof_analysis $temp_incr;\n' ...
                           '            set ok [analyze 1];\n' ...
                           '         };\n' ...
                           '      };\n' ...
                           '      set disp_node_i [nodeDisp $ctrl_node_i];\n' ...
                           '      set disp_node_j [nodeDisp $ctrl_node_j];\n' ...
                           '      set travel [expr hypot($orig_dist_1 - [lindex $disp_node_i $ctrl_dof_index_1] + [lindex $disp_node_j $ctrl_dof_index_1], $orig_dist_2 - [lindex $disp_node_i $ctrl_dof_index_2] + [lindex $disp_node_j $ctrl_dof_index_2]) - $init_length - $ctrl_disp];\n' ...
                           '      # puts "travel: $travel";\n' ...
                           '   };\n' ...
                           '};\n'];

                       
        end
        
    end
    
end